var seApp     = Application("System Events");
var oProcess  = seApp.processes.whose({frontmost: true})[0];
var appName   = oProcess.displayedName();

var url;
var title;

switch(appName) {
  case "Safari":
    url = Application(appName).documents[0].url();
    title = Application(appName).documents[0].name();
    break;
  case "Google Chrome":
  case "Google Chrome Canary": 
  case "Chromium":
    console.log("Chrome")
    url = Application(appName).windows[0].activeTab().url();
    title = Application(appName).windows[0].activeTab().name();
    break;
  default:
    title = oProcess.
      windows().
      find(w => w.attributes.byName("AXMain").value() === true).
      attributes.
      byName("AXTitle").
      value()
}

function getIdleTime() {
  var app = Application.currentApplication();
  app.includeStandardAdditions = true;

  var idleTime = app.doShellScript("ioreg -c IOHIDSystem | awk '/HIDIdleTime/ {print int($NF/1000000000); exit}'");
  return parseInt(idleTime);
}

function formatDate(date) {
    let day = date.getDate().toString().padStart(2, '0');
    let month = (date.getMonth() + 1).toString().padStart(2, '0');
    let year = date.getFullYear();
    let hours = date.getHours().toString().padStart(2, '0');
    let minutes = date.getMinutes().toString().padStart(2, '0');
    let seconds = date.getSeconds().toString().padStart(2, '0');
    return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;
}

JSON.stringify({
  timestamp: formatDate(new Date()),
  idleseconds: getIdleTime(),
  appname: appName,
  title: title,
  url: url
});
